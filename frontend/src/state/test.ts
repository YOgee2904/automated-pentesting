import { Reducer } from "redux";

// Define the initial state
interface TestState {
  url: string;
  status: boolean;
}

const initialState: TestState = {
  url: "",
  status: false,
};
// Define action types
enum TestActionTypes {
  SET_URL = "SET_URL",
  SET_STATUS = "SET_STATUS",
}

// Define action interfaces
interface SetUrlAction {
  type: TestActionTypes.SET_URL;
  payload: string;
}

interface SetStatusAction {
  type: TestActionTypes.SET_STATUS;
  payload: boolean;
}

// Define action creators
const setUrl = (url: string): SetUrlAction => ({
  type: TestActionTypes.SET_URL,
  payload: url,
});

const setStatus = (status: boolean): SetStatusAction => ({
  type: TestActionTypes.SET_STATUS,
  payload: status,
});
// Define the reducer
const testReducer: Reducer<TestState, SetUrlAction | SetStatusAction> = (
  state = initialState,
  action
) => {
  switch (action.type) {
    case TestActionTypes.SET_URL:
      return {
        ...state,
        url: action.payload,
      };
    case TestActionTypes.SET_STATUS:
      return {
        ...state,
        status: action.payload,
      };
    default:
      return state;
  }
};

export default testReducer;
