import { Action } from 'redux';

// Import necessary dependencies

// Define the action types
enum UserDetailActionTypes {
    SET_USER_DETAILS = 'SET_USER_DETAILS',
}

// Define the user detail interface
interface UserDetail {
    name: string;
    email: string;
    id: number;
}

// Define the action interface
interface SetUserDetailsAction extends Action<UserDetailActionTypes> {
    type: UserDetailActionTypes.SET_USER_DETAILS;
    payload: UserDetail;
}

// Define the action creator function
export const setUserDetails = (userDetails: UserDetail): SetUserDetailsAction => ({
    type: UserDetailActionTypes.SET_USER_DETAILS,
    payload: userDetails,
});

// Export the action types and action creator
export type UserDetailActions = SetUserDetailsAction;

// Define the initial state
interface UserDetailState {
    name: string;
    email: string;
    id: number;
  }
  
  const initialState: UserDetailState = {
    name: '',
    email: '',
    id: 0,
  };
  
  // Define the reducer
  export function userDetailReducer(state = initialState, action: UserDetailActions): UserDetailState {
    switch (action.type) {
      case UserDetailActionTypes.SET_USER_DETAILS:
        return {
          ...state,
          ...action.payload
        };
      default:
        return state;
    }
  }